# Generate release PRs, and follow up with update PRs

name: Release

on:
  push:
    branches:
      - main

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      paths_released: ${{ steps.rpa.outputs.paths_released }}
      releases_created: ${{ steps.rpa.outputs.releases_created }}
    steps:
      - uses: actions/checkout@v4
      - run: |-
          go work init
          go work use a
          go work use b
          go run ./b/main
      - id: rpa
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}
          config-file: release-please.json
          manifest-file: .release-please-manifest.json
      - run: echo "$ALL"
        env:
          ALL: ${{toJson(steps.rpa.outputs)}}
      - run: echo paths_released[${{steps.rpa.outputs.paths_released}}]
      - run: echo pr[${{steps.rpa.outputs.pr}}]
      - run: echo prs[${{steps.rpa.outputs.prs}}]
      - run: echo prs_created[${{steps.rpa.outputs.prs_created}}]
      - run: echo releases_created[${{steps.rpa.outputs.releases_created}}]
      - run: echo a--release_created[${{steps.rpa.outputs.a--release_created}}]
      - run: echo b--release_created[${{steps.rpa.outputs.b--release_created}}]

  update-go-mods:
    runs-on: ubuntu-latest
    needs: 
      - release-please
    if: fromJSON(needs.release-please.outputs.releases_created)
    strategy:
      matrix:
        path: ${{ fromJSON(needs.release-please.outputs.paths_released) }}
    steps:
      - run: |
          echo update b if a released
        if: matrix.path == 'a'
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJson(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"
