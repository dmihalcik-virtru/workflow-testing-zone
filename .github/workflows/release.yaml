# Generate release PRs, and follow up with update PRs

name: Release

on:
  push:
    branches:
      - main

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      paths_released: ${{ steps.rpa.outputs.paths_released }}
      releases_created: ${{ steps.rpa.outputs.releases_created }}
      to_update: ${{ steps.todo.outputs.TO_UPDATE }}
    steps:
      - uses: actions/checkout@v4
      - run: |-
          go work init
          go work use a
          go work use b
          go run ./b/main
      - id: rpa
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}
          config-file: release-please.json
          manifest-file: .release-please-manifest.json
      - run: echo "$ALL"
        env:
          ALL: ${{toJson(steps.rpa.outputs)}}
      - id: todo
        run: |
          for x in ${{join(fromJson(steps.rpa.outputs.paths_released), ' ')}}; do
            echo [$x][]
            case EXPRESSION in
              a)
                echo "TO_UPDATE=['b']" >>"$GITHUB_OUTPUT"
                ;;
              b)
                ;;
            esac
          done
      - run: echo paths_released[${{steps.rpa.outputs.paths_released}}]

  update-go-mods:
    runs-on: ubuntu-latest
    needs: 
      - release-please
    if: fromJSON(needs.release-please.outputs.releases_created) && fromJSON(needs.release-please.outputs.to_update).length
    strategy:
      matrix:
        path: ${{ fromJSON(needs.release-please.outputs.to_update) }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - run: |
          git checkout -b update-go-mods-for-${{matrix.path}}
          git push -u origin HEAD
          cd ${{matrix.path}}
          for x in ${{join(fromJson(needs.release-please.outputs.paths_released), ' ')}}; do
            pkg=github.com/dmihalcik-virtru/workflow-testing-zone/${x}
            if grep "$pkg"; then
              ver=$(jq -r .${x} < ../.release-please-manifest.json)
              echo "go get ${pkg}@v${ver}"
              go get "${pkg}@v${ver}"
            fi
          done
      - uses: planetscale/ghcommit-action@v0.1.40
        with:
          commit_message: "chore(core): Update dependencies in ${{ matrix.path }}"
          repo: ${{ github.repository }}
          branch: update-go-mods-for-${{ matrix.path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: create pull request
        run: gh pr create -B main --fill
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
